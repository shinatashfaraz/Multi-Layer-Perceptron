# -*- coding: utf-8 -*-
"""Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_8HSffulvxKlYc74mNbMHcWc0cpbZsy9

# Regression
"""

from tensorflow.keras.datasets import boston_housing
from tensorflow.keras import Sequential
from tensorflow.keras import layers
import matplotlib.pyplot as plt

"""## 1- Data preparation"""

(train_data, train_labels), (test_data, test_labels) = boston_housing.load_data()

train_data.shape

train_data[0]

train_labels[0]

mean = train_data.mean(axis=0)
mean

std = train_data.std(axis=0)
std

train_data = train_data - mean
train_data = train_data / std

train_data[0]

"""## 2- Model design"""

def build_model():
  model = Sequential([
      layers.Dense(64, activation="relu", input_shape=(13,)),
      layers.Dense(64, activation="relu"),
      layers.Dense(1)
      ])

  model.compile(optimizer="rmsprop", loss="mse", metrics=["mae"])
  return model

model = build_model()
model.summary()

"""## 3- Training"""

history = model.fit(train_data, train_labels,
                    batch_size=16,
                    epochs=20,
                    validation_split=0.2)

"""## 4- Evaluation"""

losses = history.history['loss']
val_losses = history.history['val_loss']

plt.plot(losses, label='Train loss')
plt.plot(val_losses, label='Validation loss')
plt.legend()
plt.show()

maes = history.history['mae']
val_maes = history.history['val_mae']

plt.plot(maes, label='Train MAE')
plt.plot(val_maes, label='Validation MAE')
plt.legend()
plt.show()

test_data -= mean
test_data /= std

model.evaluate(test_data, test_labels)